apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "tf-controller.labels" . | nindent 4 }}
  name: {{ include "tf-controller.fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "tf-controller.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- with .Values.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- include "tf-controller.selectorLabels" . | nindent 8 }}
    spec:
      {{- if not .Values.serviceAccount.create }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      containers:
      - args:
        - --watch-all-namespaces
        - --log-level={{ .Values.logLevel }}
        - --log-encoding={{ .Values.logEncoding }}
        - --enable-leader-election
        - --concurrent={{ .Values.concurrency }}
        - --ca-cert-validity-duration={{ .Values.caCertValidityDuration }}
        - --cert-rotation-check-frequency={{ .Values.certRotationCheckFrequency }}
        - --cert-validity-duration={{ .Values.certValidityDuration }}
        - --runner-creation-timeout={{ .Values.runner.creationTimeout }}
        - --runner-grpc-max-message-size={{ .Values.runner.grpc.maxMessageSize }}
        - --events-addr={{ .Values.eventsAddress }}
        - --kube-api-qps={{ .Values.kubeAPIQPS }}
        - --kube-api-burst={{ .Values.kubeAPIBurst }}
        - --allow-break-the-glass={{ .Values.allowBreakTheGlass }}
        - --cluster-domain={{ .Values.clusterDomain }}
        command:
        - /sbin/tini
        - --
        - tf-controller
        env:
        - name: RUNTIME_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: RUNNER_POD_IMAGE
          value: "{{ .Values.runner.image.repository }}:{{ default .Chart.AppVersion .Values.runner.image.tag }}"
        {{- range $key, $value := .Values.extraEnv }}
        - name: {{ $key | quote }}
          value: {{ $value | quote }}
        {{- end }}
        image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
        name: {{ .Chart.Name }}
        ports:
        - containerPort: 8080
          name: http-prom
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        {{- with .Values.volumeMounts }}
        volumeMounts:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      serviceAccountName: {{ include "tf-controller.serviceAccountName" . }}
      terminationGracePeriodSeconds: 10
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
