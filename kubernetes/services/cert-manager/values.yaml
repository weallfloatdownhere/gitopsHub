global:
  imagePullSecrets: []
  commonLabels: {}
  priorityClassName: ""
  rbac:
    create: true
    aggregateClusterRoles: true
  podSecurityPolicy:
    enabled: false
    useAppArmor: true
  logLevel: 2
  leaderElection:
    namespace: "kube-system"
installCRDs: false
replicaCount: 1
strategy: {}
podDisruptionBudget:
  enabled: false
featureGates: ""
maxConcurrentChallenges: 60
image:
  repository: quay.io/jetstack/cert-manager-controller
  pullPolicy: IfNotPresent
clusterResourceNamespace: ""
namespace: ""
serviceAccount:
  create: true
  automountServiceAccountToken: true
enableCertificateOwnerRef: false
config:
dns01RecursiveNameservers: ""
dns01RecursiveNameserversOnly: false
extraArgs: []
extraEnv: []
resources: {}
securityContext:
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault
containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
volumes: []
volumeMounts: []
podLabels: {}
nodeSelector:
  kubernetes.io/os: linux
ingressShim: {}
prometheus:
  enabled: true
  servicemonitor:
    enabled: false
    prometheusInstance: default
    targetPort: 9402
    path: /metrics
    interval: 60s
    scrapeTimeout: 30s
    labels: {}
    annotations: {}
    honorLabels: false
    endpointAdditionalProperties: {}
affinity: {}
tolerations: []
topologySpreadConstraints: []
livenessProbe:
  enabled: false
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 15
  successThreshold: 1
  failureThreshold: 8
enableServiceLinks: false
webhook:
  replicaCount: 1
  timeoutSeconds: 10
  config:
  strategy: {}
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  podDisruptionBudget:
    enabled: false
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
  extraArgs: []
  featureGates: ""
  resources: {}
  livenessProbe:
    failureThreshold: 3
    initialDelaySeconds: 60
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  readinessProbe:
    failureThreshold: 3
    initialDelaySeconds: 5
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1
  nodeSelector:
    kubernetes.io/os: linux
  affinity: {}
  tolerations: []
  topologySpreadConstraints: []
  podLabels: {}
  serviceLabels: {}
  image:
    repository: quay.io/jetstack/cert-manager-webhook
    pullPolicy: IfNotPresent
  serviceAccount:
    create: true
    automountServiceAccountToken: true
  securePort: 10250
  hostNetwork: false
  serviceType: ClusterIP
  url: {}
  networkPolicy:
    enabled: false
    ingress:
      - from:
          - ipBlock:
              cidr: 0.0.0.0/0
    egress:
      - ports:
          - port: 80
            protocol: TCP
          - port: 443
            protocol: TCP
          - port: 53
            protocol: TCP
          - port: 53
            protocol: UDP
          - port: 6443
            protocol: TCP
        to:
          - ipBlock:
              cidr: 0.0.0.0/0
  volumes: []
  volumeMounts: []
  enableServiceLinks: false
cainjector:
  enabled: true
  replicaCount: 1
  strategy: {}
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  podDisruptionBudget:
    enabled: false
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
  extraArgs: []
  resources: {}
  nodeSelector:
    kubernetes.io/os: linux
  affinity: {}
  tolerations: []
  topologySpreadConstraints: []
  podLabels: {}
  image:
    repository: quay.io/jetstack/cert-manager-cainjector
    pullPolicy: IfNotPresent
  serviceAccount:
    create: true
    automountServiceAccountToken: true
  volumes: []
  volumeMounts: []
  enableServiceLinks: false
acmesolver:
  image:
    repository: quay.io/jetstack/cert-manager-acmesolver
startupapicheck:
  enabled: false
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
  timeout: 2m
  backoffLimit: 4
  jobAnnotations:
    helm.sh/hook: post-install
    helm.sh/hook-weight: "1"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  extraArgs: []
  resources: {}
  nodeSelector:
    kubernetes.io/os: linux
  affinity: {}
  tolerations: []
  podLabels: {}
  image:
    repository: quay.io/jetstack/cert-manager-ctl
    pullPolicy: IfNotPresent
  rbac:
    annotations:
      helm.sh/hook: post-install
      helm.sh/hook-weight: "-5"
      helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  serviceAccount:
    create: true
    annotations:
      helm.sh/hook: post-install
      helm.sh/hook-weight: "-5"
      helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    automountServiceAccountToken: true
  volumes: []
  volumeMounts: []
  enableServiceLinks: false
